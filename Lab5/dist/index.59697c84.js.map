{"mappings":"AASA,MAAM,sBAAsB;IAExB,OAAO,MAAM,GAAgB;QACzB,WAAW;QACX,UAAU;QACV,OAAO;QACP,UAAU;QACV,UAAU;QACV,iBAAiB;KACpB,CAAC;CACL;AAED,MAAM,UAAU,GAAG,IAAI,sBAAsB,EAAE,AAAC;AAEhD,MAAM,sBAAsB;IAExB,OAAO,MAAM,GAAgB;QACzB,WAAW;QACX,UAAU;QACV,UAAU;QACV,UAAU;QACV,iBAAiB;KACpB,CAAC;IAEF,aAAc;QACZ,KAAK,MAAM,KAAK,IAAI,sBAAsB,CAAC,MAAM,CAChD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KAE1B;IAED,WAAW,CAAC,KAAgB,EAAE;QAC7B,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAE,gBAAgB,CAAC,OAAO,EAAE,CAAC,KAAU,GAAK;YACrE,IAAI,CAAC,QAAQ,GAAG;gBAAC,GAAG,IAAI,CAAC,QAAQ;gBAAE,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK;aAAC,CAAC;YAChE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC3B,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SAC7B,CAAC,CAAC;KACJ;IAED,aAAa,GAAG,CAAC,KAAgB,GAAK;QACrC,IAAI,KAAK,KAAK,WAAW;YACnB,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EACpC,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,4CAA4C,CAAC,CAAC;iBAE9E,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;SAEnD;KACJ,CAAA;IAED,aAAa,GAAG,CAAC,KAAgB,EAAE,OAAe,GAAK;QACtD,QAAQ,CAAC,cAAc,CAAC,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC,CAAE,SAAS,GAAG,OAAO,CAAC;KACpE,CAAA;CACF,CACD,gGAAgG","sources":["src/app.ts"],"sourcesContent":["interface IFormData {\n\tfirstName: string;\n    lastName: string;\n    birthday: Date;\n    password: string;\n    confirmPassword: string;\n}\ntype FormField = keyof IFormData;\n\nclass RegisterFormController {\n    formData: IFormData;\n    static fields: FormField[] = [\n        \"firstName\",\n        \"lastName\",\n        \"email\",\n        \"birthday\",\n        \"password\",\n        \"confirmPassword\"\n    ];\n}\n\nconst controller = new RegisterFormController();\n\nclass RegisterFormController {\n    formData: IFormData;\n    static fields: FormField[] = [\n        \"firstName\",\n        \"lastName\",\n        \"birthday\",\n        \"password\",\n        \"confirmPassword\"\n    ];\n\n    constructor() {\n      for (const field of RegisterFormController.fields) {\n      \tthis.bindElement(field);\n      }\n    }\n\n    bindElement(field: FormField) {\n    \tdocument.getElementById(field)!.addEventListener(\"input\", (event: any) => {\n          this.formData = {...this.formData, [field]: event.target.value};\n          console.log(this.formData);\n          this.onDataChanged(field);\n      });\n    }\n\n    onDataChanged = (field: FormField) => {\n    \tif (field === \"firstName\") {\n          \tif (this.formData.firstName.length < 2) {\n            \tthis.setValidation(\"firstName\", \"Your name must have at least 2 characters.\");\n            } else {\n            \tthis.setValidation(\"firstName\", \"Looks good!\");\n            }\n        }\n    }\n\n    setValidation = (field: FormField, message: string) => {\n    \tdocument.getElementById(`${field}-validation`)!.innerHTML = message;\n    }\n  }\n  // /(?=[A-Za-z0-9@#$%^&+!=]+$)^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@#$%^&+!=])(?=.{8,}).*$/g;\n"],"names":[],"version":3,"file":"index.59697c84.js.map","sourceRoot":"/__parcel_source_root/"}